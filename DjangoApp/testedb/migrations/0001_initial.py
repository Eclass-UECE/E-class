# Generated by Django 5.2 on 2025-05-01 13:09

import django.core.validators
import django.db.models.deletion
import testedb.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alunos',
            fields=[
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome completo')),
                ('cpf', models.CharField(max_length=11, primary_key=True, serialize=False, validators=[testedb.validators.validar_cpf], verbose_name='CPF')),
                ('telefone', models.CharField(max_length=12, validators=[testedb.validators.validar_telefone], verbose_name='Telefone')),
                ('dt_nasc', models.DateField(verbose_name='Data de nascimento')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('instituicao_ensino', models.CharField(max_length=255, verbose_name='Instituição de ensino')),
                ('ocupacao', models.CharField(max_length=255, verbose_name='Ocupação')),
                ('semestre', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='Semestre')),
                ('relatorio', models.TextField(blank=True, null=True, verbose_name='Relatório')),
            ],
        ),
        migrations.CreateModel(
            name='Aulas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID_Aulas')),
                ('data', models.DateField(verbose_name='Data')),
                ('conteudo', models.TextField(verbose_name='Conteúdo da aula')),
                ('objetivos', models.TextField(verbose_name='Objetivos')),
            ],
        ),
        migrations.CreateModel(
            name='Coordenadores',
            fields=[
                ('matricula', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('senha', models.CharField(blank=True, default='12345678', max_length=30, verbose_name='Senha')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome completo')),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[testedb.validators.validar_cpf], verbose_name='CPF')),
                ('rg', models.CharField(max_length=9, unique=True, validators=[testedb.validators.validar_rg], verbose_name='RG')),
                ('telefone', models.CharField(max_length=12, validators=[testedb.validators.validar_telefone], verbose_name='Telefone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome completo')),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[testedb.validators.validar_cpf], verbose_name='CPF')),
                ('dt_nasc', models.DateField(verbose_name='Data de nascimento')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('telefone', models.CharField(max_length=12, validators=[testedb.validators.validar_telefone], verbose_name='Telefone (WhatsApp)')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço Completo')),
                ('aluno_uece', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não'), ('Outro', 'Outro')], max_length=10, verbose_name='Você é aluno da FECLI-UECE?')),
                ('como_conheceu', models.CharField(choices=[('Rede_Social', 'Rede Social'), ('Indicação', 'Indicação'), ('TV', 'TV'), ('Outro', 'Outro')], max_length=20, verbose_name='Como você conheceu o Eclass?')),
                ('prioridades', models.CharField(choices=[('Aluno_UECE', 'Aluno de Letras-Inglês da UECE'), ('Prof_Ingles', 'Atua como professor de inglês na rede pública'), ('Aluno_Egresso', 'Aluno egresso do curso de Letras-Inglês'), ('Prof_Publi', 'Professor da rede pública'), ('Pesquisador', 'Atua como pesquisador'), ('Pos_grad', 'Cursa pós-graduação'), ('Graduacao', 'Cursa graduação'), ('Aluno_subsequente', 'Aluno de curso técnico/subsequente'), ('Ex_aluno_reprovado', 'Ex aluno do E-class (Reprovado)'), ('Ex_aluno_desistente', 'Ex aluno do E-class (Desistente)'), ('Servidor_UECE', 'Servidor da UECE'), ('Servidor_publi', 'Servidor público'), ('Nenhum', 'Não me enquadro em nenhuma das anteriores')], verbose_name='Critérios de prioridades')),
                ('ocupacao', models.CharField(max_length=255, verbose_name='Qual a sua ocupação atual?')),
                ('motivacao', models.TextField(verbose_name='Escreva aqui as suas motivações para participar no curso e também mencione as razões pelas quais você deve ser selecionada(o) para cursar o ECLASS. (Lembre de mencionar os critérios de prioridade listados anteriormente nos quais você se encaixa para a elaboração da resposta)')),
                ('turma_entrada', models.CharField(choices=[('Manhã', 'S01 - Turma A: sábado, manhã 08h às 11h40.'), ('Tarde', 'S01 - Turma B: sábado, tarde 13h às 16h40.')], max_length=10, verbose_name='Turma de entrada')),
                ('termo_inscricao', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=5, verbose_name='Declaro que li e concordo com os termos de inscrição referente ao período letivo 2024.1 do ECLASS, estando ciente de que o curso não efetuará a matrícula de alunos que fornecerem dados incorretos ou falsos')),
            ],
        ),
        migrations.CreateModel(
            name='Professores',
            fields=[
                ('matricula', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('senha', models.CharField(blank=True, default='12345678', max_length=30, verbose_name='Senha')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome completo')),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[testedb.validators.validar_cpf], verbose_name='CPF')),
                ('rg', models.CharField(max_length=9, unique=True, validators=[testedb.validators.validar_rg], verbose_name='RG')),
                ('telefone', models.CharField(max_length=12, validators=[testedb.validators.validar_telefone], verbose_name='Telefone')),
                ('dt_nasc', models.DateField(verbose_name='Data de nascimento')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('semestre_ingressao', models.CharField(max_length=6, validators=[testedb.validators.validar_ingressao], verbose_name='Semestre de Ingresso')),
                ('turno', models.CharField(choices=[('Matutino', 'Matutino'), ('Vespertino', 'Vespertino'), ('Noturno', 'Noturno')], max_length=20, verbose_name='Turno')),
            ],
        ),
        migrations.CreateModel(
            name='Provas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID_Prova')),
                ('conteudo', models.TextField(verbose_name='Conteúdo da prova')),
                ('data', models.DateField(verbose_name='Data')),
                ('tipo', models.CharField(choices=[('Writing', 'Writing'), ('Use_of_english', 'Use of english'), ('Speaking', 'Speaking'), ('Listening', 'Listening')], max_length=30, verbose_name='Tipo da prova')),
                ('objetivos', models.TextField(verbose_name='Objetivos')),
            ],
        ),
        migrations.CreateModel(
            name='Turmas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID_Turma')),
                ('semestre_letivo', models.CharField(max_length=6, validators=[testedb.validators.validar_ingressao], verbose_name='Semestre da turma')),
                ('turno', models.CharField(choices=[('Matutino', 'Matutino'), ('Vespertino', 'Vespertino'), ('Noturno', 'Noturno')], max_length=20, verbose_name='Turno')),
                ('sala', models.CharField(max_length=10, verbose_name='Sala')),
                ('num_vagas', models.PositiveIntegerField(verbose_name='Vagas')),
            ],
        ),
        migrations.CreateModel(
            name='Frequencia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID_Freq')),
                ('presenca', models.BooleanField(default=False, verbose_name='Presença')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testedb.alunos', verbose_name='Aluno')),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testedb.aulas', verbose_name='Aula')),
            ],
        ),
        migrations.CreateModel(
            name='AnexosInscricao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='inscricoes/anexos/', verbose_name='Documento')),
                ('inscricao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='testedb.inscricao')),
            ],
        ),
        migrations.CreateModel(
            name='DadosBancarios',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID_DadosBanc')),
                ('nome_banco', models.CharField(max_length=100, verbose_name='Nome do banco')),
                ('agencia', models.CharField(max_length=30, verbose_name='Nome da agência')),
                ('numero_conta', models.CharField(max_length=50, verbose_name='Número da conta')),
                ('tipo_conta', models.CharField(max_length=50, verbose_name='Tipo da conta')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testedb.professores', verbose_name='Professor')),
            ],
        ),
        migrations.CreateModel(
            name='AlunosProvas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Nota')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testedb.alunos', verbose_name='Aluno')),
                ('prova', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testedb.provas', verbose_name='Prova')),
            ],
        ),
        migrations.AddField(
            model_name='aulas',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testedb.turmas', verbose_name='Turma'),
        ),
        migrations.AddField(
            model_name='alunos',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testedb.turmas', verbose_name='Turma'),
        ),
    ]
